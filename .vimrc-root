set nocompatible              " be iMproved, required
filetype off                  " required

syntax on
set background=dark



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" lightline settings
let g:lightline = {
    \ 'colorscheme': 'wombat',
    \ }
set laststatus=2
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" Clear the styles for misspelled words
hi clear SpellBad
" underline misspelled words
hi SpellBad cterm=underline 
"Set the color to orange-ish
hi SpellBad ctermfg=166 

" Disable folding by default in Markdown files
let g:vim_markdown_folding_disabled=1

set autoindent " auto indent after {
set shiftwidth=4 " number of space characters inserted for indentation
set expandtab " inserts spaces instead of tabs
"set tabstop=4 " number of spaces the tab is.
set bs=indent,eol,start		" allow backspacing over everything in insert mode
set textwidth=80

nnoremap <silent> j :<C-U>call Down(v:count)<CR>
vnoremap <silent> j gj

" Allow j and k keys to move cursor through soft wrapped lines, AND still
" allow for relative numbers
nnoremap <silent> k :<C-U>call Up(v:count)<CR>
vnoremap <silent> k gk

function! Down(vcount)
  if a:vcount == 0
    exe "normal! gj"
  else
    exe "normal! ". a:vcount ."j"
  endif
endfunction

function! Up(vcount)
  if a:vcount == 0
    exe "normal! gk"
  else
    exe "normal! ". a:vcount ."k"
  endif
endfunction

set relativenumber
set number



" Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
set viminfo^=%



""""""""""""""""""""""""""""""""""""""""
"http://github.com/shime/vim-livedown
""""""""""""""""""""""""""""""""""""""""
" should markdown preview get shown automatically upon opening markdown buffer
let g:livedown_autorun = 1
" should the browser window pop-up upon previewing
let g:livedown_open = 1 
" the port on which Livedown server will run
let g:livedown_port = 1337
"global function you can call explicitly for previews
map gm :call LivedownPreview()<CR>
""""""""""""""""""""""""""""""""""""""""


""""""""""""""""""""""""""""""""""""""""
" Automatic Paste mode
""""""""""""""""""""""""""""""""""""""""
function! WrapForTmux(s)
    if !exists('$TMUX')
        return a:s
    endif

    let tmux_start = "\<Esc>Ptmux;"
    let tmux_end = "\<Esc>\\"

    return tmux_start . substitute(a:s, "\<Esc>", "\<Esc>\<Esc>", 'g') . tmux_end
endfunction

let &t_SI .= WrapForTmux("\<Esc>[?2004h")
let &t_EI .= WrapForTmux("\<Esc>[?2004l")

function! XTermPasteBegin()
    set pastetoggle=<Esc>[201~
    set paste
    return ""
endfunction

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()
""""""""""""""""""""""""""""""""""""""""


""""""""""""""""""""""""""""""""""""""""
" following from: http://amix.dk/vim/vimrc.html
""""""""""""""""""""""""""""""""""""""""
set undodir=~/.vim/undodir
set undofile
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload
""""""""""""""""""""""""""""""""""""""""
